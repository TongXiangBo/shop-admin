<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  


        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  




        http://www.springframework.org/schema/mvc   
    	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 对项目中的所有类进行扫描以完成Bean创建并进行自动注入。  
           支持 @Controller、@Service 以及 @Repository 和 @Component -->
	<!-- 扫描项目中com.fh.shop.controller包下所有的类，从而使类中的@Controller注解生效 -->
    <context:component-scan base-package="com.fh.shop.backend.controller"/>

	<mvc:annotation-driven/>

	<!--
        jsp视图解析器，对模型视图名称的解析，即在模型视图名称添加前后缀
        如/view/welcome.jsp对应的视图名就是：welcome
        这个类在视图解析器链中一定要定义在其他视图的后面，因为它始终会返回一个视图
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>




    <!--图片上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10000000"></property>
    </bean>


    <!-- 拦截器 -->
        <mvc:interceptors>
     <!--  多个拦截器，顺序执行 -->
     <mvc:interceptor>
 <!--	/**表示所有url包括子url路径 -->
     		<mvc:mapping path="/**"/>
 		<!--	不拦截登录的请求 -->
			<!--<mvc:exclude-mapping path="/user/toLogin.jhtml"/>
			<mvc:exclude-mapping path="/user/userLogin.jhtml"/>
			<mvc:exclude-mapping path="/user/validateUserName.jhtml"/>
			<mvc:exclude-mapping path="/user/addNewUser.jhtml"/>-->
			
            <bean class="com.fh.shop.backend.interceptor.Interceptor"></bean>
            
        </mvc:interceptor>
      </mvc:interceptors>


     <bean class="com.fh.shop.backend.aspect.AspectInfo" id="logInterceptor"/>
     <aop:config proxy-target-class="true" /> 
    <aop:config>
    <!--定义切面-->
    
    <aop:aspect id="logAspect" ref="logInterceptor">
      <!--  定义切入点-->
        <aop:pointcut expression="execution(* com.fh.shop.backend.controller..*.*(..))"  id="logPointCut"/>
      <!--  方法执行之前被调用执行的-->
        <!--<aop:before method="before" pointcut-ref="logPointCut"/>一个切入点的引用
         <aop:after method="after" pointcut-ref="logPointCut"/>一个切入点的引用 
        <aop:after-throwing method="afterThrowing" pointcut-ref="logPointCut" />
        <aop:after-returning method="afterReturn" pointcut-ref="logPointCut" />-->
         <aop:around method="around" pointcut-ref="logPointCut"/> 
    </aop:aspect>
</aop:config>





</beans>